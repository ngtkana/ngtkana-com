name: Deploy to Google Cloud Run

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'public/**'
      - '**.js'
      - '**.ts'
      - '**.tsx'
      - '**.json'
      - '**.mjs'
      - 'package.json'
      - 'package-lock.json'
      - 'Dockerfile'
      - 'next.config.ts'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:

# Ensure this workflow runs only after tests have passed
concurrency:
  group: "deploy"
  cancel-in-progress: false

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: ngtkana-com
  REGION: asia-northeast1

jobs:
  # Build and deploy to production
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Set up Cloud SDK
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Authorize Docker push
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

      - name: Build and push container
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: asia-northeast1-docker.pkg.dev/${{ env.PROJECT_ID }}/ngtkana-com/website:${{ github.sha }},asia-northeast1-docker.pkg.dev/${{ env.PROJECT_ID }}/ngtkana-com/website:latest

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: asia-northeast1-docker.pkg.dev/${{ env.PROJECT_ID }}/ngtkana-com/website:${{ github.sha }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
